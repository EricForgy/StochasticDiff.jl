var documenterSearchIndex = {"docs":
[{"location":"#StochasticDiff.jl-1","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"This is a simple package to demonstrate the extension of automatic differentiation to stochastic processes.","category":"page"},{"location":"#Background-1","page":"StochasticDiff.jl","title":"Background","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Give any two functions f and g, a derivation d is a nilpotent map satisfying the product rule","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"d(fg) = (df)g + f(dg)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"We observe that d(fg) can be determined if we know, not just f and g, but the pairs (fdf) and (gdg).","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Since f and g are functions and df and dg are covector fields on some space, then the pairs (fdf) and (gdg) represent covector fields on a larger total space.","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Let pi denote a projection map given by","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"pi(fdf) = f","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"For a given derivation d, we have the inverse map","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"pi^-1 f = (fdf)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"We introduce a product of (fdf) and (gdg) by insisting that pi^-1 be an algebra homomorphism, i.e.","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"so that","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"beginaligned(fdf)(gdg) = (fgd(fg))  = (fg(df)g+f(dg))endaligned","category":"page"},{"location":"#Example:-One-Dimension-1","page":"StochasticDiff.jl","title":"Example: One Dimension","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Consider the case of a smooth one-dimensional space parameterized by a smooth  coordinate function x and two covectors","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"(fdf) = (f(partial_x f) dx)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"and","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"(gdg) = (g(partial_x g) dx)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"where partial_x denotes partial derivative with respect to x.","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"The data for a covector (fdf) can be encoded in a struct","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"struct Newton1D{F,dFdx}\r\n    f::F\r\n    dfdx::dFdx\r\nend","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"and the product is given by","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.:*(a::Newton1D,b::Newton1D) = Newton1D(a.f*b.f, a.dfdx*b.x+a.f*b.dfdx)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"As we will see below, it is convenient to define","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.exp(a::Newton1D) = exp(a.f)*Newton1D(1.0,a.dfdx)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"and","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"function Base.log(a::Newton1D)\r\n    invx = inv(a.f)\r\n    return Newtonian(log(a.f),invx*a.dfdx)\r\nend","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"so that","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.:^(x,y::Newton1D) = exp(y*log(x))","category":"page"},{"location":"#Newtonian-Processes-1","page":"StochasticDiff.jl","title":"Newtonian Processes","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Next consider a (1+1)-dimensional Newtonian process","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"df = (partial_x f) dx + (partial_t f) dt","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"The corresponding covector (fdf) can be expanded to","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"(fdf) = (f(partial_x f)dx) + (f(partial_t f)dt)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"indicating the process can be encoded into a struct","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"struct Newtonian{F,dFdx,dFdt}\r\n    f::F\r\n    dfdx::dFdx\r\n    dfdt::dFdt\r\nend","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Similar to the one-dimensional example above, the product of two covectors is given by","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.:*(a::Newtonian,b::Newtonian) = Newtonian(\r\n    a.f*b.f,\r\n    a.f*b.dfdx + a.dfdx*b.f,\r\n    a.f*b.dfdt + a.dfdt*b.f)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"and we have","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.exp(x::Newtonian) = exp(x.f)*Newtonian(1,x.dfdx,x.dfdt)\r\n\r\nfunction Base.log(x::Newtonian)\r\n    invx = inv(x.f)\r\n    return Newtonian(log(x.f),invx*x.dfdx,invx*x.dfdt)\r\nend\r\n\r\nBase.:^(x,y::Newtonian) = exp(y*log(x))","category":"page"},{"location":"#Stochastic-Processes-1","page":"StochasticDiff.jl","title":"Stochastic Processes","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Finally, consider the (1+1)-dimensional stochastic process","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"df = (partial_x f) dx + (partial_t f + 12 partial_x^2 f) dt","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Like the Newtonian process above, the stochastic process can be encoded into a struct","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"struct Stochastic{F,dFdx,dFdt}\r\n    f::F\r\n    dfdx::dFdx\r\n    dfdt::dFdt\r\nend","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Stochastic processes are also amenable to automatic differentiate with some minor revisions.","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"To see this, first rewrite the above process as","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"df = (partial_x f) dx + (partial_t f) dt","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"where","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"partial_t = partial_t + 12 partial_x^2","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"The operator partial_t does not satisfy the usual product rule of partial derivatives. Instead, it satisfies","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"partial_t(fg) = (partial_t f)g + f(partial_t g) + (partial_x f)(partial_x g)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Therefore, we have","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Base.:*(x::Stochastic,y::Stochastic) =\r\n    Stochastic(\r\n        x.f*y.f,\r\n        x.f*y.dfdx + x.dfdx*y.f,\r\n        x.f*y.dfdt + x.dfdt*y.f + x.dfdx*y.dfdx\r\n    )","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Then, with a bit of tedious, but straightforward algebra, we have","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"function Base.inv(y::Stochastic)\r\n    invy = inv(y.f)\r\n    return invy*Stochastic(\r\n        1.0,\r\n        -invy*y.dfdx,\r\n        -invy*y.dfdt + invy^2*y.dfdx^2)\r\nend\r\n\r\nBase.:^(x::Stochastic,k::R) where R <:Number =\r\n    Stochastic(\r\n        x.f^k,\r\n        k*x.f^(k-1)*x.dfdx,\r\n        k*x.f^(k-1)*x.dfdt + .5*k*(k-1)*x.f^(k-2)*x.dfdx^2)\r\n\r\n        Base.:/(x::Stochastic,y::Stochastic) =\r\n    Stochastic(\r\n        x.f/y.f,\r\n        (x.dfdx*y.f - x.f*y.dfdx)/y.f^2,\r\n        (x.dfdt*y.f^2 + x.f*(y.dfdx^2 - y.f*y.dfdt))/y.f^3\r\n    )\r\n\r\nBase.exp(x::Stochastic) =\r\n    exp(x.f)*Stochastic(\r\n        1,\r\n        x.dfdx,\r\n        x.dfdt + .5*x.dfdx^2)\r\n\r\nfunction Base.log(x::Stochastic)\r\n    invx = inv(x.f)\r\n    val = invx*x.dfdx\r\n    Stochastic(\r\n        log(x.f),\r\n        val,\r\n        invx*x.dfdt - .5*val^2)\r\nend\r\n\r\nBase.:^(x,y::Stochastic) = exp(y*log(x))","category":"page"},{"location":"#Geometric-Brownian-Motion-1","page":"StochasticDiff.jl","title":"Geometric Brownian Motion","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Consider geometric Brownian motion in (1+1)-dimensions given by the stochastic differential equation","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"dS = mu S dt + sigma S dx","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"with closed-form solution","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"S(xt) = S(00) exp(mu-sigma^22)t + sigma x","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"We'll first write down the closed form solution as a stochastic function:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> mu = 4; sigma = 5; f(x::Stochastic,t::Stochastic) = exp((mu-sigma^2/2)*t + sigma*x)\r\nf (generic function with 2 methods)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Next, for convenience, we'll add a method to take number values for x and t:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> f(x,t) = f(Stochastic(x,1,0),Stochastic(t,0,1))\r\nf (generic function with 2 methods)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Finally, we evaluate the function at x = 0 y = 0:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> f(0,0)\r\nStochastic{Float64,Float64,Float64}(1.0, 5.0, 4.0)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"This is the expected result since","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"partial_x S = mu S and partial_t S = mu S","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Furthermore, we have","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> f(1,1)/f(1,1).f\r\nStochastic{Float64,Float64,Float64}(1.0, 5.0, 4.0)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"as expected.","category":"page"},{"location":"#Sanity-Checks-1","page":"StochasticDiff.jl","title":"Sanity Checks","text":"","category":"section"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Check inverses:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> x\r\nStochastic{Float64,Float64,Float64}(0.8198419485754191, 0.5608953995378232, 0.3496467042194824)\r\n\r\njulia> inv(x)\r\nStochastic{Float64,Float64,Float64}(1.2197472960948492, -0.8344909017733231, 0.050718904750958915)\r\n\r\njulia> 1.0/x\r\nStochastic{Float64,Float64,Float64}(1.2197472960948492, -0.8344909017733231, 0.050718904750958915)\r\n\r\njulia> x^(-1.0)\r\nStochastic{Float64,Float64,Float64}(1.2197472960948492, -0.8344909017733233, 0.05071890475095886)\r\n\r\njulia> inv(x)*x\r\nStochastic{Float64,Float64,Float64}(0.9999999999999999, 1.1102230246251565e-16, 0.0)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Check division:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> x/y\r\nStochastic{Float64,Float64,Float64}(0.8341627751184755, 0.039239594639088035, 0.4932061731418642)\r\n\r\njulia> x*y^(-1)\r\nStochastic{Float64,Float64,Float64}(0.8341627751184755, 0.039239594639088105, 0.12961198046378852)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Check log(exp(x)) == exp(log(x)) == x:","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> exp(x)\r\nStochastic{Float64,Float64,Float64}(2.270141010155909, 1.2733116488985963, 1.1508446453370713)\r\n\r\njulia> log(x)\r\nStochastic{Float64,Float64,Float64}(-0.19864370294139905, 0.6841506469783, 0.19244956817977596)\r\n\r\njulia> log(exp(x))\r\nStochastic{Float64,Float64,Float64}(0.8198419485754191, 0.5608953995378232, 0.3496467042194824)\r\n\r\njulia> exp(log(x))\r\nStochastic{Float64,Float64,Float64}(0.8198419485754191, 0.5608953995378232, 0.34964670421948235)\r\n\r\njulia> x\r\nStochastic{Float64,Float64,Float64}(0.8198419485754191, 0.5608953995378232, 0.3496467042194824)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"Check exp(-log(x)) = inv(x)","category":"page"},{"location":"#","page":"StochasticDiff.jl","title":"StochasticDiff.jl","text":"julia> exp(-log(x))\r\nStochastic{Float64,Float64,Float64}(1.2197472960948492, -0.8344909017733231, 0.050718904750958915)\r\n\r\njulia> inv(x)\r\nStochastic{Float64,Float64,Float64}(1.2197472960948492, -0.8344909017733231, 0.050718904750958915)","category":"page"}]
}
